package com.doku.repository;

import org.hibernate.Session;
import org.hibernate.Transaction;
import com.doku.model.Users.Kid;
import com.doku.util.HibernateUtil;

import java.util.List;

public class KidRepository {

    // Kid ekler
    public void addKid(Kid kid) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        Transaction transaction = null;
        try {
            transaction = session.beginTransaction();
            session.save(kid);
            transaction.commit();
        } catch (Exception e) {
            if (transaction != null) {
                transaction.rollback();
            }
            e.printStackTrace();
        } finally {
            session.close();
        }
    }

    // ID'ye göre Kid'i getirir
    public Kid getKidById(int id) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        Kid kid = null;
        try {
            session.beginTransaction();
            kid = session.get(Kid.class, id);
            session.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            session.close();
        }
        return kid;
    }

    // Tüm Kid'leri getirir
    public List<Kid> getAllKids() {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        List<Kid> kids = null;
        try {
            session.beginTransaction();
            kids = session.createQuery("from Kid", Kid.class).getResultList();
            session.getTransaction().commit();
        } catch (Exception e) {
            e.printStackTrace();
        } finally {
            session.close();
        }
        return kids;
    }

    // Kid günceller
    public void updateKid(Kid kid) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        Transaction transaction = null;
        try {
            transaction = session.beginTransaction();
            session.update(kid);
            transaction.commit();
        } catch (Exception e) {
            if (transaction != null) {
                transaction.rollback();
            }
            e.printStackTrace();
        } finally {
            session.close();
        }
    }

    // Kid siler
    public void deleteKid(int id) {
        Session session = HibernateUtil.getSessionFactory().getCurrentSession();
        Transaction transaction = null;
        try {
            transaction = session.beginTransaction();
            Kid kid = session.get(Kid.class, id);
            if (kid != null) {
                session.delete(kid);
            }
            transaction.commit();
        } catch (Exception e) {
            if (transaction != null) {
                transaction.rollback();
            }
            e.printStackTrace();
        } finally {
            session.close();
        }
    }
}
